# =============================================================================
# Sprint Reports v2 Environment Configuration
# =============================================================================
# Copy this file to .env and update values for your environment
# SECURITY WARNING: Never commit .env files to version control
# =============================================================================

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# SECRET_KEY: Used for JWT token signing and session management
# CRITICAL: Change this to a strong, unique value in production
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-change-this-in-production

# JWT Token Configuration
# ACCESS_TOKEN_EXPIRE_MINUTES: How long access tokens remain valid (default: 30)
# REFRESH_TOKEN_EXPIRE_DAYS: How long refresh tokens remain valid (default: 7)
# ACCESS_TOKEN_EXPIRE_MINUTES=30
# REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Connection Settings
# For Docker development, use: db (service name)
# For local development, use: localhost
POSTGRES_SERVER=localhost
POSTGRES_USER=sprint_reports
POSTGRES_PASSWORD=your-database-password
POSTGRES_DB=sprint_reports_v2
POSTGRES_PORT=5432

# Alternative: Full database URL (overrides individual settings above)
# DATABASE_URL=postgresql+asyncpg://sprint_reports:password@localhost:5432/sprint_reports_v2

# Database Pool Configuration (optional)
# MAX_CONNECTIONS_PER_POOL=20
# MAX_OVERFLOW_CONNECTIONS=0
# POOL_PRE_PING=true

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis for caching and session storage
# For Docker development, use: redis://redis:6379/0
# For local development, use: redis://localhost:6379/0
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# JIRA INTEGRATION
# =============================================================================
# JIRA Cloud Configuration
# JIRA_URL: Your Atlassian domain (e.g., https://company.atlassian.net)
# JIRA_EMAIL: Email address associated with JIRA account
# JIRA_API_TOKEN: Generate from https://id.atlassian.com/manage-profile/security/api-tokens
JIRA_URL=https://your-domain.atlassian.net
JIRA_EMAIL=your-email@company.com
JIRA_API_TOKEN=your-jira-api-token

# Optional JIRA Configuration
# JIRA_PROJECT_KEY=PROJ  # Default project key for queries
# JIRA_MAX_RESULTS=100   # Maximum results per API call

# =============================================================================
# CONFLUENCE INTEGRATION
# =============================================================================
# Confluence Configuration (optional)
CONFLUENCE_URL=https://your-domain.atlassian.net/wiki

# =============================================================================
# BACKGROUND TASKS (CELERY)
# =============================================================================
# Celery Configuration for async task processing
# Should match Redis URL or use separate Redis database
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Optional Celery Settings
# CELERY_TASK_SERIALIZER=json
# CELERY_RESULT_SERIALIZER=json
# CELERY_TIMEZONE=UTC

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# LOG_LEVEL: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Use DEBUG for development, INFO for production
LOG_LEVEL=INFO

# Optional Logging Settings
# LOG_FORMAT=json  # json or text
# LOG_FILE_PATH=/var/log/sprint-reports/app.log

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable application features
ENABLE_REAL_TIME_UPDATES=true    # WebSocket support
ENABLE_ML_INSIGHTS=false         # Machine learning features (requires additional setup)
ENABLE_AUDIT_LOGGING=true        # Security audit logging

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Settings for development environment only
# Remove or set to false in production

# DEBUG_MODE=false                # Enable debug mode
# CORS_ALLOW_ALL_ORIGINS=false   # Allow CORS from all origins (dev only)
# SKIP_AUTH=false                 # Skip authentication (dev only)

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================
# Optional performance tuning

# API Rate Limiting
# RATE_LIMIT_REQUESTS=100         # Requests per minute per IP
# RATE_LIMIT_WINDOW=60            # Time window in seconds

# Cache Settings
# CACHE_TTL=300                   # Default cache TTL in seconds
# CACHE_MAX_SIZE=1000             # Maximum cache entries

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# Additional integrations (optional)

# Email Configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_TLS=true

# Slack Integration (for notifications)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# SLACK_CHANNEL=#sprint-reports

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================
# Optional monitoring configuration

# OpenTelemetry
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
# OTEL_SERVICE_NAME=sprint-reports-v2
# OTEL_SERVICE_VERSION=2.0.0

# Health Check Configuration
# HEALTH_CHECK_TIMEOUT=30         # Health check timeout in seconds